{"id":"mockapi.js","dependencies":[{"name":"D:\\final project\\package.json","includedInParent":true,"mtime":1656940985168},{"name":"./newImagesArray.js","loc":{"line":1,"column":26,"index":26},"parent":"D:\\final project\\src\\mockapi.js","resolved":"D:\\final project\\src\\newImagesArray.js"},{"name":"./createPinterest.js","loc":{"line":2,"column":32,"index":82},"parent":"D:\\final project\\src\\mockapi.js","resolved":"D:\\final project\\src\\createPinterest.js"},{"name":"./localStorage.js","loc":{"line":3,"column":29,"index":136},"parent":"D:\\final project\\src\\mockapi.js","resolved":"D:\\final project\\src\\localStorage.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL_API = void 0;\nexports.createElement = createElement;\nexports.getPinterestImage = getPinterestImage;\n\nvar _newImagesArray = require(\"./newImagesArray.js\");\n\nvar _createPinterest = require(\"./createPinterest.js\");\n\nvar _localStorage = require(\"./localStorage.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar URL_API = 'https://62b0c0c4e460b79df04c901b.mockapi.io/api';\nexports.URL_API = URL_API;\n\nfunction getPinterestImage() {\n  return _getPinterestImage.apply(this, arguments);\n}\n\nfunction _getPinterestImage() {\n  _getPinterestImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, pinterest;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(URL_API, \"/pinterest\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            pinterest = _context.sent;\n            return _context.abrupt(\"return\", pinterest);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPinterestImage.apply(this, arguments);\n}\n\nfunction createElement() {\n  getPinterestImage().then(function (pinterest) {\n    pinterest.forEach(function (_ref) {\n      var id = _ref.id,\n          name = _ref.name,\n          avatar = _ref.avatar,\n          description = _ref.description,\n          hashtag = _ref.hashtag;\n      var gallery = {};\n      gallery.id = id;\n      gallery.name = name;\n      gallery.description = description;\n      gallery.avatar = avatar;\n      gallery.hashtag = hashtag;\n\n      _newImagesArray.newImages.push(gallery);\n\n      (0, _createPinterest.createPinterest)(gallery);\n      (0, _localStorage.setPinterest)(_newImagesArray.newImages);\n    });\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"mockapi.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"mockapi.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"mockapi.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":47},"source":"mockapi.js","original":{"line":2,"column":0}},{"generated":{"line":24,"column":0},"source":"mockapi.js","original":{"line":5,"column":7}},{"generated":{"line":24,"column":4},"source":"mockapi.js","original":{"line":5,"column":13},"name":"URL_API"},{"generated":{"line":24,"column":11},"source":"mockapi.js","original":{"line":5,"column":20}},{"generated":{"line":24,"column":14},"source":"mockapi.js","original":{"line":5,"column":23}},{"generated":{"line":24,"column":63},"source":"mockapi.js","original":{"line":5,"column":7}},{"generated":{"line":27,"column":9},"source":"mockapi.js","original":{"line":6,"column":22},"name":"getPinterestImage"},{"generated":{"line":32,"column":82},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":33,"column":4},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":34,"column":4},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":35,"column":6},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":36,"column":8},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":37,"column":10},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":38,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":39,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":39,"column":19},"source":"mockapi.js","original":{"line":7,"column":27},"name":"fetch"},{"generated":{"line":39,"column":24},"source":"mockapi.js","original":{"line":7,"column":32}},{"generated":{"line":39,"column":35},"source":"mockapi.js","original":{"line":7,"column":36},"name":"URL_API"},{"generated":{"line":39,"column":42},"source":"mockapi.js","original":{"line":7,"column":32}},{"generated":{"line":39,"column":58},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":41,"column":10},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":42,"column":12},"source":"mockapi.js","original":{"line":7,"column":10},"name":"response"},{"generated":{"line":42,"column":20},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":43,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":44,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":44,"column":19},"source":"mockapi.js","original":{"line":8,"column":28},"name":"response"},{"generated":{"line":44,"column":27},"source":"mockapi.js","original":{"line":8,"column":36}},{"generated":{"line":44,"column":28},"source":"mockapi.js","original":{"line":8,"column":37},"name":"json"},{"generated":{"line":44,"column":32},"source":"mockapi.js","original":{"line":8,"column":28}},{"generated":{"line":44,"column":34},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":46,"column":10},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":47,"column":12},"source":"mockapi.js","original":{"line":8,"column":10},"name":"pinterest"},{"generated":{"line":47,"column":21},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":48,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":48,"column":45},"source":"mockapi.js","original":{"line":9,"column":11},"name":"pinterest"},{"generated":{"line":48,"column":54},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":50,"column":10},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":51,"column":10},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":52,"column":12},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":53,"column":8},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":54,"column":6},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":55,"column":4},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":56,"column":2},"source":"mockapi.js","original":{"line":6,"column":7}},{"generated":{"line":60,"column":0},"source":"mockapi.js","original":{"line":11,"column":7}},{"generated":{"line":60,"column":9},"source":"mockapi.js","original":{"line":11,"column":16},"name":"createElement"},{"generated":{"line":60,"column":22},"source":"mockapi.js","original":{"line":11,"column":7}},{"generated":{"line":60,"column":25},"source":"mockapi.js","original":{"line":11,"column":32}},{"generated":{"line":61,"column":2},"source":"mockapi.js","original":{"line":12,"column":4},"name":"getPinterestImage"},{"generated":{"line":61,"column":19},"source":"mockapi.js","original":{"line":12,"column":21}},{"generated":{"line":61,"column":22},"source":"mockapi.js","original":{"line":12,"column":24},"name":"then"},{"generated":{"line":61,"column":26},"source":"mockapi.js","original":{"line":12,"column":4}},{"generated":{"line":61,"column":27},"source":"mockapi.js","original":{"line":12,"column":29}},{"generated":{"line":61,"column":37},"source":"mockapi.js","original":{"line":12,"column":30},"name":"pinterest"},{"generated":{"line":61,"column":46},"source":"mockapi.js","original":{"line":12,"column":29}},{"generated":{"line":61,"column":48},"source":"mockapi.js","original":{"line":12,"column":44}},{"generated":{"line":62,"column":4},"source":"mockapi.js","original":{"line":13,"column":8},"name":"pinterest"},{"generated":{"line":62,"column":13},"source":"mockapi.js","original":{"line":13,"column":17}},{"generated":{"line":62,"column":14},"source":"mockapi.js","original":{"line":13,"column":18},"name":"forEach"},{"generated":{"line":62,"column":21},"source":"mockapi.js","original":{"line":13,"column":8}},{"generated":{"line":62,"column":22},"source":"mockapi.js","original":{"line":13,"column":26}},{"generated":{"line":62,"column":38},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":63,"column":6},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":63,"column":10},"source":"mockapi.js","original":{"line":13,"column":28},"name":"id"},{"generated":{"line":63,"column":12},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":63,"column":20},"source":"mockapi.js","original":{"line":13,"column":28},"name":"id"},{"generated":{"line":63,"column":22},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":64,"column":6},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":64,"column":10},"source":"mockapi.js","original":{"line":13,"column":32},"name":"name"},{"generated":{"line":64,"column":14},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":64,"column":22},"source":"mockapi.js","original":{"line":13,"column":32},"name":"name"},{"generated":{"line":64,"column":26},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":65,"column":6},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":65,"column":10},"source":"mockapi.js","original":{"line":13,"column":38},"name":"avatar"},{"generated":{"line":65,"column":16},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":65,"column":24},"source":"mockapi.js","original":{"line":13,"column":38},"name":"avatar"},{"generated":{"line":65,"column":30},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":66,"column":6},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":66,"column":10},"source":"mockapi.js","original":{"line":13,"column":46},"name":"description"},{"generated":{"line":66,"column":21},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":66,"column":29},"source":"mockapi.js","original":{"line":13,"column":46},"name":"description"},{"generated":{"line":66,"column":40},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":67,"column":6},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":67,"column":10},"source":"mockapi.js","original":{"line":13,"column":59},"name":"hashtag"},{"generated":{"line":67,"column":17},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":67,"column":25},"source":"mockapi.js","original":{"line":13,"column":59},"name":"hashtag"},{"generated":{"line":67,"column":32},"source":"mockapi.js","original":{"line":13,"column":72}},{"generated":{"line":68,"column":6},"source":"mockapi.js","original":{"line":14,"column":12}},{"generated":{"line":68,"column":10},"source":"mockapi.js","original":{"line":14,"column":16},"name":"gallery"},{"generated":{"line":68,"column":17},"source":"mockapi.js","original":{"line":14,"column":23}},{"generated":{"line":68,"column":20},"source":"mockapi.js","original":{"line":14,"column":26}},{"generated":{"line":68,"column":22},"source":"mockapi.js","original":{"line":14,"column":12}},{"generated":{"line":69,"column":6},"source":"mockapi.js","original":{"line":15,"column":12},"name":"gallery"},{"generated":{"line":69,"column":13},"source":"mockapi.js","original":{"line":15,"column":19}},{"generated":{"line":69,"column":14},"source":"mockapi.js","original":{"line":15,"column":20},"name":"id"},{"generated":{"line":69,"column":16},"source":"mockapi.js","original":{"line":15,"column":12}},{"generated":{"line":69,"column":19},"source":"mockapi.js","original":{"line":15,"column":25},"name":"id"},{"generated":{"line":69,"column":21},"source":"mockapi.js","original":{"line":15,"column":12}},{"generated":{"line":70,"column":6},"source":"mockapi.js","original":{"line":16,"column":12},"name":"gallery"},{"generated":{"line":70,"column":13},"source":"mockapi.js","original":{"line":16,"column":19}},{"generated":{"line":70,"column":14},"source":"mockapi.js","original":{"line":16,"column":20},"name":"name"},{"generated":{"line":70,"column":18},"source":"mockapi.js","original":{"line":16,"column":12}},{"generated":{"line":70,"column":21},"source":"mockapi.js","original":{"line":16,"column":27},"name":"name"},{"generated":{"line":70,"column":25},"source":"mockapi.js","original":{"line":16,"column":12}},{"generated":{"line":71,"column":6},"source":"mockapi.js","original":{"line":17,"column":12},"name":"gallery"},{"generated":{"line":71,"column":13},"source":"mockapi.js","original":{"line":17,"column":19}},{"generated":{"line":71,"column":14},"source":"mockapi.js","original":{"line":17,"column":20},"name":"description"},{"generated":{"line":71,"column":25},"source":"mockapi.js","original":{"line":17,"column":12}},{"generated":{"line":71,"column":28},"source":"mockapi.js","original":{"line":17,"column":34},"name":"description"},{"generated":{"line":71,"column":39},"source":"mockapi.js","original":{"line":17,"column":12}},{"generated":{"line":72,"column":6},"source":"mockapi.js","original":{"line":18,"column":12},"name":"gallery"},{"generated":{"line":72,"column":13},"source":"mockapi.js","original":{"line":18,"column":19}},{"generated":{"line":72,"column":14},"source":"mockapi.js","original":{"line":18,"column":20},"name":"avatar"},{"generated":{"line":72,"column":20},"source":"mockapi.js","original":{"line":18,"column":12}},{"generated":{"line":72,"column":23},"source":"mockapi.js","original":{"line":18,"column":29},"name":"avatar"},{"generated":{"line":72,"column":29},"source":"mockapi.js","original":{"line":18,"column":12}},{"generated":{"line":73,"column":6},"source":"mockapi.js","original":{"line":19,"column":12},"name":"gallery"},{"generated":{"line":73,"column":13},"source":"mockapi.js","original":{"line":19,"column":19}},{"generated":{"line":73,"column":14},"source":"mockapi.js","original":{"line":19,"column":20},"name":"hashtag"},{"generated":{"line":73,"column":21},"source":"mockapi.js","original":{"line":19,"column":12}},{"generated":{"line":73,"column":24},"source":"mockapi.js","original":{"line":19,"column":30},"name":"hashtag"},{"generated":{"line":73,"column":31},"source":"mockapi.js","original":{"line":19,"column":12}},{"generated":{"line":75,"column":6},"source":"mockapi.js","original":{"line":20,"column":12},"name":"newImages"},{"generated":{"line":75,"column":31},"source":"mockapi.js","original":{"line":20,"column":12}},{"generated":{"line":75,"column":32},"source":"mockapi.js","original":{"line":20,"column":22},"name":"push"},{"generated":{"line":75,"column":36},"source":"mockapi.js","original":{"line":20,"column":12}},{"generated":{"line":75,"column":37},"source":"mockapi.js","original":{"line":20,"column":27},"name":"gallery"},{"generated":{"line":75,"column":44},"source":"mockapi.js","original":{"line":20,"column":12}},{"generated":{"line":77,"column":6},"source":"mockapi.js","original":{"line":21,"column":12}},{"generated":{"line":77,"column":10},"source":"mockapi.js","original":{"line":21,"column":12},"name":"createPinterest"},{"generated":{"line":77,"column":42},"source":"mockapi.js","original":{"line":21,"column":12}},{"generated":{"line":77,"column":44},"source":"mockapi.js","original":{"line":21,"column":28},"name":"gallery"},{"generated":{"line":77,"column":51},"source":"mockapi.js","original":{"line":21,"column":12}},{"generated":{"line":78,"column":6},"source":"mockapi.js","original":{"line":22,"column":12}},{"generated":{"line":78,"column":10},"source":"mockapi.js","original":{"line":22,"column":12},"name":"setPinterest"},{"generated":{"line":78,"column":36},"source":"mockapi.js","original":{"line":22,"column":12}},{"generated":{"line":78,"column":38},"source":"mockapi.js","original":{"line":22,"column":25},"name":"newImages"},{"generated":{"line":78,"column":63},"source":"mockapi.js","original":{"line":22,"column":12}},{"generated":{"line":79,"column":4},"source":"mockapi.js","original":{"line":23,"column":13}},{"generated":{"line":79,"column":5},"source":"mockapi.js","original":{"line":13,"column":8}},{"generated":{"line":80,"column":2},"source":"mockapi.js","original":{"line":24,"column":5}},{"generated":{"line":80,"column":3},"source":"mockapi.js","original":{"line":12,"column":4}},{"generated":{"line":81,"column":0},"source":"mockapi.js","original":{"line":25,"column":1}}],"sources":{"mockapi.js":"import { newImages } from \"./newImagesArray.js\";\r\nimport { createPinterest } from \"./createPinterest.js\";\r\nimport { setPinterest } from \"./localStorage.js\";\r\n\r\nexport const URL_API = 'https://62b0c0c4e460b79df04c901b.mockapi.io/api';\r\nexport async function getPinterestImage() {\r\n    const response = await fetch(`${URL_API}/pinterest`);\r\n    const pinterest = await response.json();\r\n    return pinterest;\r\n}\r\nexport function createElement() {\r\n    getPinterestImage().then((pinterest) => {\r\n        pinterest.forEach(({id, name, avatar, description, hashtag}) => {\r\n            let gallery = {};\r\n            gallery.id = id;\r\n            gallery.name = name;\r\n            gallery.description = description;\r\n            gallery.avatar = avatar;\r\n            gallery.hashtag = hashtag;\r\n            newImages.push(gallery);\r\n            createPinterest(gallery); \r\n            setPinterest(newImages);\r\n            });\r\n    })\r\n}"},"lineCount":null}},"error":null,"hash":"ff9f0d86c75490ff2dd1c704425314d5","cacheData":{"env":{}}}